{
    "project_root": "./",
    "last_run_record_filename": "last_run_record.json",
    "data_name": "bo2_newcat",
    "train_data_url": "data/train_bo2.pkl",
    "test_data_url": "data/test_bo2.pkl",
    "test_label_url": null,
    "down_sampling_amt": 0,
    "down_sampling_ratio": null, 
    "validation_index": null, 
    "validation_ratio": 0.15,
    "validation_ratio_mode": "random",
    "validation_ratio_stratify": true,
    
    "debug_data": 0,
        
    "gs_models": "catb",
    "categorical_features":    ["FLAG_OWN_CAR","FLAG_OWN_REALTY","NAME_TYPE_SUITE","NAME_INCOME_TYPE","NAME_EDUCATION_TYPE","NAME_FAMILY_STATUS","NAME_HOUSING_TYPE","OCCUPATION_TYPE","FLAG_DOCUMENT_2","FLAG_DOCUMENT_3","FLAG_DOCUMENT_4","FLAG_DOCUMENT_5","FLAG_DOCUMENT_6","FLAG_DOCUMENT_7","FLAG_DOCUMENT_8","FLAG_DOCUMENT_9","FLAG_DOCUMENT_10","FLAG_DOCUMENT_11","FLAG_DOCUMENT_12", "FLAG_DOCUMENT_13","FLAG_DOCUMENT_14","FLAG_DOCUMENT_15","FLAG_DOCUMENT_16","FLAG_DOCUMENT_17","FLAG_DOCUMENT_18", "FLAG_DOCUMENT_19","FLAG_DOCUMENT_20","FLAG_DOCUMENT_21", "CAT_MONTHS_BIRTH", "CNT_CHILDREN", "CODE_GENDER", "CONTACT", "EMERGENCYSTATE_MODE", "FLAG_EMAIL", "FLAG_OTHER", "FONDKAPREMONT_MODE", "HOUR_APPR_PROCESS_START", "HOUSETYPE_MODE", "LIVE_CITY_NOT_WORK_CITY", "LIVE_REGION_NOT_WORK_REGION", "NAME_CONTRACT_TYPE", "ORGANIZATION_TYPE", "REGION_RATING_CLIENT", "REGION_RATING_CLIENT_W_CITY", "REGION_RATING_CLIENT_W_CITY_times_livingsum_AVG", "REGION_RATING_CLIENT_W_CITY_times_livingsum_MEDI", "REGION_RATING_CLIENT_W_CITY_times_livingsum_MODE", "REGION_RATING_CLIENT_times_livingsum_AVG", "REGION_RATING_CLIENT_times_livingsum_MEDI", "REGION_RATING_CLIENT_times_livingsum_MODE", "REG_CITY_NOT_LIVE_CITY", "REG_CITY_NOT_WORK_CITY", "REG_REGION_NOT_LIVE_REGION", "REG_REGION_NOT_WORK_REGION", "WALLSMATERIAL_MODE", "WEEKDAY_APPR_PROCESS_START", "count_CODE_GENDER_NAME_EDUCATION_TYPE", "count_CODE_GENDER_NAME_EDUCATION_TYPE_NAME_INCOME_TYPE", "count_CODE_GENDER_NAME_INCOME_TYPE", "count_NAME_EDUCATION_TYPE_NAME_INCOME_TYPE", "unique_CODE_GENDER_NAME_EDUCATION_TYPE", "unique_CODE_GENDER_NAME_INCOME_TYPE", "unique_CODE_GENDER_x", "unique_CODE_GENDER_y", "unique_NAME_EDUCATION_TYPE_NAME_INCOME_TYPE", "unique_NAME_EDUCATION_TYPE_x", "unique_NAME_EDUCATION_TYPE_y", "unique_NAME_INCOME_TYPE_x", "unique_NAME_INCOME_TYPE_y"],
    "not_features": ["ORGANIZATION_TYPE","SK_ID_CURR"],
    "label": "TARGET",
    "gs_search_rounds": 5,
    "gs_cv": true,
    "gs_cv_stratified": false,
    "gs_nfold": 10,
    "gs_verbose_eval": 500,
    "gs_do_preds": true,
    "gs_suppress_warning": true,
        
    "build_stacknet_layers": [1],
    "oof_nfolds": 10,
    "layer1_models": ["lgb"],
    "top_n_per_gs_res_for_layer1": 2,
    "top_n_by": "auc",
    "report_metric": "auc",
    "layer1_thresh_or_chosen_for_layer2": 0.7972,
    "layer2_models": ["logreg","nn"],
    
    "_comments": {
        "validation": "validation_index overrules validation_ratio",
        "validation_ratio" : "range(exclusive): (0,1)",
        "down_sampling_amt": [
            "integer. 0: no downsampling. >0, the amount of downsamplings",
            "Note 1: combine the same positive samples with different negative samples will result in a different downsampling (assume more neg samples then pos samples",
            "Note 2: when set to 0, 'down_sampling_ratio' has no effect"
        ],
        "down_sampling_ratio": [
            "null or float in (0,1]",
            "Note: e.g. if 0.7, means chosen all pos samples plus 70% of negative samples. if null, then choose the all pos samples plus same amount of neg samples. (assume more neg samples then pos samples.)"
        ],
        "debug_data": "(0,1): only use this percentage of train and val data (test data not changed). int that > 1, use the first n rows",
        "gs_model": "lgb, nn, lgb|nn. grid search models",
        "layer1_models": "a list of chosen models. e.g. [lgb, xgb, catb, nn]. if null, all models found in grid search result will be checked",
        "top_n_gs": "number of gs params will be chosen to generate stacknet layer1 models",
        "layer1_thresh": "threshold(based on gs_val_auc) to choosen from layer1 models to construct layer2 models"
    }
}
