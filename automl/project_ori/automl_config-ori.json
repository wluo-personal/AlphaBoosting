{
    "project_root": "./",
    "last_run_record_filename": "last_run_record.json",
    "data_name": "simple1",
    "train_data_url": "/home/kai/data/shiyi/homecreditdata/train_simple_feats_for_sn_typeastest.pkl",
    "test_data_url": "/home/kai/data/shiyi/homecreditdata/test_simple_feats_for_sn.pkl",
    "test_label_url": null,
    "down_sampling_amt": 0,
    "down_sampling_ratio": null, 
    "validation_index": null, 
    "validation_ratio": 0.15,
    "validation_ratio_mode": "random",
    "validation_ratio_stratify": true,
    
    "debug_data": 0,

    "categorical_features": [],
    "not_features": ["SK_ID_CURR"],
    "label": "TARGET",

    "do_gs": true,
    "gs_models": "lgb",
    "gs_search_rounds": 30,
    "gs_cv": true,
    "gs_cv_stratified": true,
    "gs_nfold": 5,
    "gs_verbose_eval": 500,
    "gs_do_preds": false,
    "gs_suppress_warning": true,

    "do_stacknet": true,
    "report_metric": "auc",
    "build_stacknet_layers": [1],

    "__layer1config__": "#### layer1config ####",
    "layer1_models": ["lgb"],
    "oof_nfolds_layer1": 5,
    "params_source": "gs",
    "build_layer1_amount__pg": 1,
    "top_n_per_gs_res_for_layer1__gs": 4,
    "top_n_by__gs": "auc",

    "__layer2config__": "#### layer2config ####",
    "layer1_thresh_or_chosen_for_layer2": [["oFsf__XGB_bo2_w2v_newcat_layer1", "1CKg__LGB_flight_data_ordinal_layer1", "dQTL__LGB_flight_data_ordinal_layer1", "pC2i__LGB_flight_data_ordinal_layer1", "f4XK__XGB_bo2_w2v_newcat_layer1", "KnJq__XGB_onehot_layer1", "x26K__XGB_onehot_layer1", "zTty__CATB_bo2_newcat_80pnull_layer1", "HyEX__LGB_fe_repro_1_layer1", "sFig__LGB_fe_repro_1_layer1", "ksIj__LGB_flight_data_ordinal_layer1", "OuFu__XGB_bo2_w2v_newcat_layer1", "3VXI__LGB_flight_data_ordinal_layer1", "9QmW__LGB_flight_data_ordinal_layer1", "VK0U__XGB_onehot_layer1", "6Keg__XGB_onehot_layer1", "Ro9e__XGB_onehot_layer1", "pVfN__LGB_fe_repro_1_layer1", "uvRx__LGB_fe_repro_1_layer1"]],
    "oof_nfolds_layer2": 3,
    "layer2_models": ["xgb"],

    "__layer3config__": "#### layer3config ####",
    "layer2_thresh_or_chosen_for_layer3": [["PbPy__NN_layer2","laux__NN_layer2","WpBG__XGB_layer2","4Kor__LGB_layer2"]],
    "oof_nfolds_layer3": 3,
    "layer3_models": ["logreg","xgb"],

    "_comments": {
        "validation": "validation_index overrules validation_ratio",
        "validation_ratio" : "range(exclusive): (0,1)",
        "down_sampling_amt": [
            "integer. 0: no downsampling. >0, the amount of downsamplings",
            "Note 1: combine the same positive samples with different negative samples will result in a different downsampling (assume more neg samples then pos samples",
            "Note 2: when set to 0, 'down_sampling_ratio' has no effect"
        ],
        "down_sampling_ratio": [
            "null or float in (0,1]",
            "Note: e.g. if 0.7, means chosen all pos samples plus 70% of negative samples. if null, then choose the all pos samples plus same amount of neg samples. (assume more neg samples then pos samples.)"
        ],
        "debug_data": "(0,1): only use this percentage of train and val data (test data not changed). int that > 1, use the first n rows",
        "gs_model": "lgb, nn, lgb|nn. grid search models",
        "params_source": "gs (grid search result saved csv) or pg (fresh params generation from params_gen",
        "build_layer1_amount": "int > 0. Only takes effect when params_source == pg",
        "layer1_models": "a list of chosen models. e.g. [lgb, xgb, catb, nn]. if null, all models found in grid search result will be checked",
        "top_n_per_gs_res_for_layer1__gs": "1. say it's 3, and layer1_models is [xgb, lgb], then in xgb and lgb grid search result, the top 3 params in each result csv (based on metric of 'top_n_by') will be chosen to build layer1. 2. ignored if params_gen is 'pg' ",
        "layer1_thresh": "threshold(based on gs_val_auc) to choosen from layer1 models to construct layer2 models"
    }
}
